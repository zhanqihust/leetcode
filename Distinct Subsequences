class Solution {
public:
    int numDistinct(string s, string t) {
        if (t.size() > s.size()) return 0;
        vector<vector<int>> m(s.size()+1,vector<int>(t.size()+1,0));
        for (int i = 0; i <= s.size(); i++) m[i][0] = 1;
        for(int i = 1; i <= s.size(); i++)
        for(int j = t.size(); j >= 1; j--){
                if (s[i-1] == t[j-1]){
                    m[i][j] = m[i-1][j-1] + m[i-1][j];
                }else{
                    m[i][j] = m[i-1][j];
                }
            }
        return m[s.size()][t.size()];
    }
};

Solution 2:
 int numDistinct(string S, string T) {  
      // Start typing your C/C++ solution below  
      // DO NOT write int main() function  
      int match[200];  
      if(S.size() < T.size()) return 0;  
      match[0] = 1;  
      for(int i=1; i <= T.size(); i++)  
        match[i] = 0;  
      for(int i=1; i<= S.size(); i ++)  
        for(int j =T.size(); j>=1; j--)  
          if(S[i-1] == T[j-1])  
            match[j]+= match[j-1];  
      return match[T.size()];  
    }  
